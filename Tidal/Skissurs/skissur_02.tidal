-- skissur_02 
-- tidal 1.7 releae
-----------------------------------------------------------------------

let d1 = p 1 . (|< orbit 0) 
    d2 = p 2 . (|< orbit 1) 
    d3 = p 3 . (|< orbit 2) 
    d4 = p 4 . (|< orbit 3) 
    d5 = p 5 . (|< orbit 4) 
    d6 = p 6 . (|< orbit 5) 
    d7 = p 7 . (|< orbit 6) 
    d8 = p 8 . (|< orbit 7) 

-----------------------------------------------------------------------

d1 $ s "Swansongs:26(4,9)" 
  # legato 2 
  # squizbus 1 "0 1.5 0 1.5"
  # lpfbus 2 "400 200 3000"
  # lpq 0.2
  # orbit 0

hush


-----------------------------------------------------------------------
-- A simple sound

d1 $ s "Strega:0" # legato 1 # orbit 0

-- This doesn't do anything different

d1 $ s "Strega:0" # legato 1 # squiz "0 1.5 0 1.5" # orbit 0

-- A workaround is to chop up the sounds into parts:

d1 $ chop 4 $ s "Strega:0" # legato 1 # squiz "0 1.5 0 1.5" # orbit 0

-- But now you can use a bus to change a single sound while it plays:

d1 $ s "Strega:0" # legato 1 # squizbus 1 "0 1.5 0 1.5" # orbit 0

-- You can add a bus to most things but have to take care to give each thing a different bus number:

d1 $ s "Strega:0" 
  # legato 1 
  # squizbus 1 "0 1.5 0 1.5"
  # lpfbus 2 "400 5000 3000"
  # lpq 0.3
  # orbit 0

-- You can pattern things within bus patterns:

d1 $ s "Strega:4" 
  # legato 1 
  # squizbus 1 (chunk 4 (fast 4) "0 1.5 0 1.5")
  # lpfbus 2 "400 2000 3000"
  # lpq 0.2
  # orbit 0

-- A big limitation is that bus patterns are monophonic. So if you do some patterning that layers them up, you'll be disappointed with the results:

d1 $ jux rev $ s "Strega:20"
  # ampbus 1 ("[1 0 [1 0] 1]*6") 
  # legato 1  
  # orbit 0

-- A workaround is to add 1 to the bus number, and 0 to the value: 

d1 $ jux (rev . (|+ ampbus 1 0)) $ s "Strega:18" 
  # ampbus 1 ("[1 0 [1 0] 1]*6") 
  # legato 1
  # orbit 0

-- Or replace the control using a different bus number with `#`

d1 $ jux (rev . (# ampbus 2 "1 0 1 0")) $ s "Strega:13" 
  # ampbus 1 ("[1 0 [1 0] 1]*3") 
  # legato 1
  # orbit 0

-----------------------------------------------------------------------

-- Syncopation with press
-- a --> [ ~ a ]

d1 $ jux press $ sound "Strega:12*2 Strega:9*3 Strega:13*2" 
  # legato 1
  # orbit 0

d1 $ stack [every 4 (fast 2) $ s "Strega:17*4" # squiz 1.3 # speed 2, 
  every 2 press $ s "Strega:8*2 Strega:4*3" 
   # lpfbus 2 "800 200 1000"
   # lpq 0.2
] # legato 1 # orbit 0

-----------------------------------------------------------------------

hush

-----------------------------------------------------------------------
-- Tidal Club #10

d1 $ slow 16 $ n "c a f e" # sound "supermandolin"
  # legato 4
  # gain 1.5
  -- # lpfbus 1 "[3000 1000]*64"
  # lpfbus 1 (segment 128 $ "[3000 1000 500]*128" * saw)
  # lpq 0.2 

-----------------------------------------------------------------------
-- drone music with tidal ...

d1 $ trigger 1 $ slow 32 $ n "[c4,a3]" # s "superzow"
  # lpfbus 1 300
  # lpqbus 2 0.1 
  # coarsebus 3 0
  # squizbus 4 0
  # roombus 5 0.2
  # sizebus 6 0.7
  # panbus 7 0
  # cut 4
  # gain 0.8

-----------------------------------------------------------------------
-- control the above pad with another pattern:

d2 $ lpfbus 1 (every 3 (fast 2) $ slow 2 $ segment 16 $ range 400 1000 saw)
  # lpqbus 2 (segment 32 $ range 0.2 0.3 sine)
  # roombus 5 0.8
  # sizebus 6 0.9
  # panbus 7 "1"

panic

-----------------------------------------------------------------------
-- press : pushes everything into an offbeat

d1 $ n "0 3 [4 2] 6" # sound "HBH" # legato 2

d1 $ every 2 press $ n "0 3 [4 2] 6" # sound "HBH" # legato 2

drawLine $ "a b [c d] e"

drawLine $ press $ "a b [c d] e"

d1 $ jux press $ n "0 3 [4 2] 6" # sound "HBH" # legato 2

d1 $ every 4 press $ n "0 3 [4 2] 6 3" # sound "HBH" # legato 2

-----------------------------------------------------------------------
-- pressBy : pushes everything into an offbeat by x amonut

d1 $ pressBy (2/3) $ n "0 3 [4 2] 6 0 2 6 3" # sound "HBH" # legato 1

d1 $ jux (pressBy (2/3)) $ n "0 3 [4 2] 6 0 2 6 3" # sound "HBH" # legato 1

-----------------------------------------------------------------------
-- ply repeats each event x times

d1 $ ply "<3 4>" $ s "HBH:130 [HBH:135, HBH:138]" # legato 1

-- non integer wokrs too

d1 $ ply 2.5 $ s "HBH:130 HBH:135" # legato 1

-----------------------------------------------------------------------

d1 $ s "HBH:130*8" # speed (range 1 2 rand) # legato 1

d1 $ s "HBH:130*8" # speed ((irand 4) + 1) # legato 1

d1 $ sew (brand) (sound "HBH:135*8") (n "0..7" # sound "HBH" # speed 2) # legato 1

d1 $ bite 4 "0 1*2 3 2*8" $ n "0 .. 7" # sound "HBH" # legato 1

d1 $ chew 4 "0 1*2 3 2*8" $ n "0 .. 7" # sound "HBH" # legato 1

d1 $ bite "<4 3>" "0 1*2 3 2*8" $ n "0 .. 7" # sound "HBH" # legato 1

setB "metre" "1(5,8,<2 0>)"

d1 $ struct "^metre" $ n "0 1 2 3" # sound "HBH" # legato 2

d1 $ chunk 4 (hurry 2) $ jux rev $ struct "^metre" $ n "0 .. 7" # sound "HBH" # legato 2

hush

-----------------------------------------------------------------------

d1 $ (jux rev $ off 0.25 (|+ n 12) $ slow 4 $ n "c(3,8) a(3,8) f(5,8) e*3" # sound "[flbass, sally]"
  |+ n 32)
  # lpfbus 1 (segment 128 $ slow 4 $ range 400 2000 sine)
  # lpqbus 2 (segment 128 $ slow 4 $ range 0 0.2 sine)
  # legato 2

-----------------------------------------------------------------------

d1 $ whenmod 4 1.5 (hurry 2) $ n "0 ..7" # sound "HBH:133" # legato 2

d1 $ while "<t t f>" (hurry 2) $ n "0 .. <9 7>" # sound "sally" # legato 3

-----------------------------------------------------------------------

hush

-----------------------------------------------------------------------
